// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ProgressArc', []).controller('getNumbers', [
    '$scope', function($scope) {
      return $scope.values = {
        expected: .9,
        actual: .6
      };
    }
  ]).directive('ngProgressbar', function() {
    return {
      restrict: 'A',
      require: '^ngModel',
      scope: {
        ngModel: '='
      },
      template: '<h4>Expected value is {{ ngModel.expected }} and actual value is {{ ngModel.actual }}.</h4><svg></svg>',
      link: function(scope, element, attributes) {
        return scope.$watchCollection('ngModel', function(newValue) {
          var arcActual, arcExpected, rawSvg, svg, values;
          if (newValue) {
            rawSvg = element.find("svg")[0];
            svg = d3.select(rawSvg).attr('width', 500).attr('height', 500);
            values = scope.ngModel;
            console.log(scope.ngModel);
            arcExpected = d3.svg.arc().innerRadius(80).outerRadius(85).startAngle(0).endAngle(values.expected * 2 * Math.PI);
            arcActual = d3.svg.arc().innerRadius(90).outerRadius(100).startAngle(0).endAngle(values.actual * 2 * Math.PI);
            svg.selectAll('*').remove();
            svg.append('path').attr('d', arcExpected).attr('transform', 'translate(100,100)');
            return svg.append('path').attr('d', arcActual).attr('transform', 'translate(100,100)');
          }
        });
      }
    };
  });

}).call(this);
